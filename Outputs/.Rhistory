##### Install and load R packages #####
if(!("rstudioapi" %in% installed.packages()[,"Package"])) install.packages("rstudioapi", repos = "http://cran.us.r-project.org", update = FALSE); library("rstudioapi")
install.packages("rstudioapi", repos = "http://cran.us.r-project.org", update = FALSE)
install.packages("rstudioapi", repos = "http://cran.us.r-project.org", update = FALSE)
install.packages("rstudioapi", repos = "http://cran.us.r-project.org", update = FALSE)
install.packages("data.table", repos = "http://cran.us.r-project.org", update = FALSE)
list.of.packages <- c("AUCell" )
AUCell.R <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(AUCell.R)){BiocManager::install("AUCell", update = FALSE, dependencies = T)}
BiocManager::install("AUCell", update = FALSE, dependencies = T)
BiocManager::install("AUCell", update = FALSE, dependencies = T, force = TRUE)
##### Install and load R packages #####
if(!("rstudioapi" %in% installed.packages()[,"Package"])) install.packages("rstudioapi", repos = "http://cran.us.r-project.org", update = FALSE); library("rstudioapi")
##### Generate an "Interactive QC Report" #####
setwd("~/"); setwd(paste0(dirname(rstudioapi::getActiveDocumentContext()$path), '/Scripts/'));
source("GenerateInteractiveQCReport.R")
GenerateInteractiveQCReport()
library(Rtools, quietly = TRUE)
install.packages('Rtools')
GenerateInteractiveQCReport()
